@page
@model ListLife.Pages.MyPageModel
@{
}


@if (TempData["Message"] != null)
{
    var messageType = TempData["MessageType"]?.ToString() == "success" ? "success" : "danger";
    <div class="alert alert-@messageType alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<!-- H1 changes from your shopping lists to Edit shopping list-->
@if (!Model.IsEditing)

{
    <h1 class="Header">Your shopping lists</h1>
}
else
{
    <h1 class="Header">Edit shopping list</h1>
}


<section class="container">
    <!-- If no list is selected for editing, show shopping lists -->
    @if (Model.EditList == null || !Model.SharedShoppingLists.Contains(Model.EditList))
    {
        <div class="left-section @(Model.IsEditing ? "hidden" : "")">

            <div class="list-header">
                <h2 id="h2YourLists">Your lists:</h2>

                <!-- Button to create a new shopping list -->
                <form asp-page="/CreateNewShoppingList" method="get" id="createnewlistform">
                    <button type="submit" class="btnNewShoppingList">Create new shopping list</button>
                </form>
            </div>
            <!-- If the user has their own shopping lists, show them -->
            @if (Model.ShoppingLists != null && Model.ShoppingLists.Any())
            {
                <ul class="list-group">
                    @foreach (var list in Model.ShoppingLists)
                    {
                        <li class="list-group-item">
                            <!-- Show the list's title and make it clickable to view details -->
                            <span class="list-title" onclick="showListDetails('@list.Id')">@list.Title</span>
                            <div class="button-group">
                                <!-- Delete a shopping list -->
                                <form method="post" asp-page-handler="Delete" style="display:inline;">
                                    <input type="hidden" name="listId" value="@list.Id" />
                                    <button type="submit" class="btn btn-danger small-btn"><i class="bi bi-trash"></i></button>
                                </form>
                                <!-- Edit a shopping list -->
                                <form method="post" asp-page-handler="Edit" style="display:inline;">
                                    <input type="hidden" name="listId" value="@list.Id" />
                                    <button type="submit" class="btn btn-primary small-btn"><i class="bi bi-pencil"></i></button>
                                </form>
                                <!-- Share Button -->
                                <form method="post" asp-page-handler="Share" style="display:inline;" onsubmit="return toggleShareInput('@list.Id');">
                                    <input type="hidden" name="listId" value="@list.Id" />
                                    <button type="submit" class="btn btn-success small-btn" title="Share">
                                        <i class="bi bi-share"></i>
                                    </button>
                                </form>
                                <!-- Hidden Email Input Field for Sharing -->
                                <form method="post" asp-page-handler="Share" id="emailForm-@list.Id" style="display:none; margin-top: 5px;">
                                    <input type="hidden" name="listId" value="@list.Id" />
                                    <input type="email" name="UserEmail" placeholder="Enter user’s email" required />
                                    <button type="submit" class="btn btn-success small-btn">Send</button>
                                </form>
                            </div>
                        </li>
                    }
                </ul>
            }
            
            <h5>Shared lists</h5>
            @if (Model.SharedShoppingLists != null && Model.SharedShoppingLists.Any())
            {
                <ul class="list-group">
                    @foreach (var list in Model.SharedShoppingLists)
                    {
                        <li class="list-group-item">
                            <strong class="list-title" onclick="showListDetails('@list.Id', true)">@list.Title</strong>
                            <div class="button-group">
                                <!-- Delete Button -->
                                <form method="post" asp-page-handler="Delete" style="display:inline;">
                                    <input type="hidden" name="listId" value="@list.Id" />
                                    <button type="submit" class="btn btn-danger small-btn" title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                                <!-- Edit Button -->
                                <form method="post" asp-page-handler="Edit" style="display:inline;">
                                    <input type="hidden" name="listId" value="@list.Id" />
                                    <button type="submit" class="btn btn-primary small-btn" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                </form>
                                <!-- Share Button -->
                                <form method="post" asp-page-handler="Share" style="display:inline;" onsubmit="return toggleShareInput('@list.Id');">
                                    <input type="hidden" name="listId" value="@list.Id" />
                                    <button type="submit" class="btn btn-success small-btn" title="Share">
                                        <i class="bi bi-share"></i>
                                    </button>
                                </form>
                                <!-- Hidden Email Input Field for Sharing -->
                                <form method="post" asp-page-handler="Share" id="emailForm-@list.Id" style="display:none; margin-top: 5px;">
                                    <input type="hidden" name="listId" value="@list.Id" />
                                    <input type="email" name="UserEmail" placeholder="Enter user’s email" required />
                                    <button type="submit" class="btn btn-success small-btn">Send</button>
                                </form>
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No Shoppinglist(s) found.</p>
            }

            <div class="list-Section" id="listDetails">
                <!-- The selected list details will be displayed here -->
            </div>

            
        </div>
    }
    <!-- End of left-section block -->

    <!-- If a list is selected for editing, show the edit section -->
    @if (Model.EditList != null)
    {
        <div class="edit-section">
            <h2>Edit shopping list: @Model.EditList.Title</h2>

            @if (Model.EditList.Products == null || !Model.EditList.Products.Any())
            {
                <p>No products added yet.</p>
            }
            else
            {

            <ul class="product-list">
                @foreach (var product in Model.EditList.Products)
                {
                    <li class="product-item"
                        data-product-id="@product.Id"
                        data-product-name="@product.Name"
                        data-product-amount="@product.Amount.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                        data-product-category="@product.Category">
                        <!-- Display products in the list -->
                        <span>@product.Name - @product.Amount @product.Category</span>
                    <div class=" = button-group">
                        <!-- Edit button -->
                        <button type="button" class="btn btn-primary small-btn" onclick="populateEditForm(this)" title="Edit">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <!-- Delete a product from the list -->
                        <form method="post" asp-page-handler="DeleteProduct" asp-route-productId="@product.Id" style="display:inline;">
                            <button type="submit" class="btn btn-danger small-btn"><i class="bi bi-trash"></i></button>
                        </form>
                    </div>
                    </li>
                }
            </ul>
            }

            <!-- Button to add a new product -->
            <button type="button" class="btn btn-primary" onclick="showAddProductForm()">Add Product</button>
            <!-- Button to go back to the main page -->
            <button type="button" class="btn btn-danger" onclick="window.location.href='/MyPage'">Back</button>

            <!-- Form to add a new product -->
            <form method="post" asp-page-handler="AddProduct" id="addProductForm" style="display: none;">
                <input type="hidden" name="shoppingListId" value="@Model.EditList.Id" />
                <!-- Hidden field to hold the product id if editing -->
                <input type="hidden" id="editProductId" name="editProductId" value="" />

                <label for="inputProductName">Product Name:</label>
                <input type="text" id="inputProductName" name="AddNewProduct.Name" class="form-control" placeholder="Enter product name" />

                <label for="inputProductAmount">Amount:</label>
                <input type="number" id="inputProductAmount" name="AddNewProduct.Amount" class="form-control" placeholder="Enter amount" />

                <label for="inputProductCategory">Category:</label>
                <select id="inputProductCategory" name="AddNewProduct.Category" class="form-control">
                    <option value="">--Select Category--</option>
                    <option value="FruitsVegetables">Fruits & Vegetables</option>
                    <option value="Fridge">Fridge items</option>
                    <option value="Freezer">Freezer items</option>
                    <option value="Pantry">Pantry items</option>
                    <option value="Hygiene">Hygiene items</option>
                    <option value="Other">Other</option>
                </select>

                <button type="submit" id="addOrUpdateProduct" class="btn btn-primary">Add to Shoppinglist</button>
            </form>
        </div>
    }
    <!-- End of edit-section block -->
</section>

<script>
    
    function showAddProductForm() {
        var form = document.getElementById("addProductForm");
        form.style.display = "block";
    }


</script>


    @* Script showing email input for sharing shoppinglists *@
    <script>
        function toggleShareInput(listId) {
            var form = document.getElementById("emailForm-" + listId);
            // Toggle the display of the email form
            if (form.style.display === "none" || form.style.display === "") {
                form.style.display = "inline-block";
            } else {
                form.style.display = "none";
            }
            return false; // Prevents form submission
        }

</script>

@* script for showing list details and checkboxes for both your own lists and shared lists*@
<script>
    function showListDetails(listId, isShared = false) {
        const handler = isShared ? 'SharedListDetails' : 'ListDetails';
        fetch(`/MyPage?handler=${handler}&id=${listId}`)
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    const listDetails = result.data;
                    const listDetailsDiv = document.getElementById('listDetails');
                    listDetailsDiv.innerHTML = `
                        <h2>${listDetails.title}</h2>
                        <ul class="list-group shopping-list">
                            ${listDetails.products.map(product => `
                                <li class="list-group-item d-flex align-items-center">
                                    <!-- Only checkbox is clickable -->
                                    <input class="form-check-input me-2 checkbox-item" type="checkbox" id="product-${product.id}" onclick="toggleCheck(this, '${listId}')">
                                    <label class="form-check-label flex-grow-1" for="product-${product.id}">
                                        ${product.name} - ${product.amount} ${product.category}
                                    </label>
                                </li>
                            `).join('')}
                        </ul>
                    `;
                    // Restore checkbox states after loading the list
                    restoreCheckedState();
                } else {
                    console.error('Error:', result.message);
                }
            })
            .catch(error => console.error('Error fetching list details:', error));
    }

        function toggleCheck(checkbox, listId) {
        const productId = checkbox.id;
        localStorage.setItem(`${listId}-${productId}`, checkbox.checked);
    }

        function restoreCheckedState(listId) {
        document.querySelectorAll(".checkbox-item").forEach(checkbox => {
            const productId = checkbox.id;
            checkbox.checked = localStorage.getItem(`${listId}-${productId}`) === "true";
        });
    }

</script>

<script>
    function populateEditForm(button) {
        // Locate the product item (assuming you stored product details as data attributes)
        var productItem = button.closest('.product-item');

        // Get product data attributes
        var productId = productItem.getAttribute('data-product-id');
        var productName = productItem.getAttribute('data-product-name');
        var productAmount = productItem.getAttribute('data-product-amount');
        var productCategory = productItem.getAttribute('data-product-category');

        // Populate form fields
        document.getElementById("inputProductName").value = productName;
        document.getElementById("inputProductAmount").value = productAmount;
        document.getElementById("inputProductCategory").value = productCategory;
        document.getElementById("editProductId").value = productId;

        // Change button text to "Update Product"
        document.getElementById("addOrUpdateProduct").textContent = "Update Product";

        // Ensure the form is visible
        document.getElementById("addProductForm").style.display = "block";
    }
</script>

<style>
    /* Style for header */
    .Header {
        text-align: center;
        margin-bottom: 20px;
    }

    #h2YourLists
    {
        margin: 0px;
        max-width: 150px;
    }

    /* Style for layout */
    .container {
        display: flex;
        justify-content: space-between;
        max-width: 1200px;
        margin: auto;
        padding: 0;
    }

    .list-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        margin-bottom: 15px;
    }

    /* Left section (shopping lists) */
    .left-section {
        flex: 1;
    }
    /*Hide left section*/
    .hidden {
        display: none;
    }

    /* Right section (editing) */
    .edit-section {
        flex: 2;
        background-color: pink;
        padding: 20px;
        border-radius: 10px;
    }

    /* SSection where list is shown */
    .list-Section {
        text-align: center;
        background-color: #333;
        border-radius: 10px;
        margin: 20px auto;
        max-width: 350px;
        
    }
    /* Checkboxar for list */
    .checkbox-item {
        width: 30px;
        height: 30px;
        border: 2px solid #333;
        cursor: pointer;
        padding: 5px
    }

    /* Don't allow click outside checkbox */
    .list-group-item {
        display: flex;
        align-items: center;
    }

    /* Stops interference between label and checkbox */
    .form-check-label {
        pointer-events: none; /* Disables clicking on the label */
    }

    .checkbox-item:checked {
        background-color: #4CAF50; /* Green check */
        border-color: #4CAF50;
    }

    #createnewlistform{
        max-width: 250px;
    }

    /* Style for buttom to create new shopping list */
    .btnNewShoppingList {
        max-width:250px;
        background-color: blue;
        color: white;
        padding: 10px;
        border-radius: 10px;
        text-align: center;
        border: none;
        cursor: pointer;
    }

    /* Style for list groups */
    .list-group {
        list-style: none;
        padding: 0;
    }

    /* Style for individual listobjekts */
    .list-group-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #333;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 5px;
        color: #ffffff;
    }

    /* Style for list titles */
    .list-title {
        flex-grow: 1;
        cursor: pointer;
        font-weight: bold;
        color: #ffffff;
    }

    /* Style for buttons in list */
    .button-group {
        display: flex;
        gap: 5px;
    }

    /* Style for individual products */
    .product-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #444;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 5px;
    }

    /* Style for small buttons */
    .small-btn {
        padding: 4px 8px;
        font-size: 14px;
    }

    a.navbar-brand
    {
        margin: 0;
    }
</style>
